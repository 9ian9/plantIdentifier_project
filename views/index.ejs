<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Plant Identifier</title>
    <link rel="stylesheet" href="/style.css">
    <script src="/script.js" defer></script>
</head>

<body>
    <div class="container">
        <div class="sidebar">
            <h1>üåø Plant Identifier</h1>
            <button class="new-chat" id="newChatBtn">New Chat</button>
            <div class="recent-chats">
                <p>Recent Chats</p>
                <ul id="chatSessionsList">
                    <!-- C√°c phi√™n chat s·∫Ω ƒë∆∞·ª£c load ƒë·ªông ·ªü ƒë√¢y -->
                    <% if (chatSessions && chatSessions.length> 0) { %>
                        <% chatSessions.forEach(session=> { %>
                            <li class="chat-session" data-session-id="<%= session.sessionId %>">
                                <div class="session-title">
                                    <%= session.title || 'New Chat' %>
                                </div>
                                <div class="session-preview">
                                    <%= session.messages[0]?.content.substring(0, 30) +
                                        (session.messages[0]?.content.length> 30 ? '...' : '') %>
                                </div>
                                <div class="session-date">
                                    <%= new Date(session.updatedAt).toLocaleString() %>
                                </div>
                            </li>
                            <% }); %>
                                <% } else { %>
                                    <li class="no-sessions">No recent chats</li>
                                    <% } %>
                </ul>
            </div>
        </div>

        <div class="main-content">
            <div class="chat-header">
                <div class="header-icon">üåø</div>
                <div class="header-text" id="chatTitle">Plant Identifier Chat</div>
            </div>

            <div class="chat-history" id="chatHistory">
                <!-- N·ªôi dung chat s·∫Ω ƒë∆∞·ª£c load ƒë·ªông ·ªü ƒë√¢y -->
            </div>

            <div class="welcome-area" id="welcomeArea">
                <div class="leaf-icon">üåø</div>
                <h2>Welcome to Plant Identifier</h2>
                <p>Upload a photo or ask a question about any plant you want to identify.</p>
                <div class="action-buttons">
                    <button class="upload-photo-btn" id="uploadPhotoBtn">
                        <span>Upload a photo</span>
                        <span>Upload a clear image of the plant you want to identify</span>
                    </button>
                    <button class="ask-question-btn" id="askQuestionBtn">
                        <span>Ask a question</span>
                        <span>Ask about plant care, species information, or growing tips</span>
                    </button>
                </div>
            </div>
            <div class="input-area">
                <input type="text" id="messageInput" placeholder="Ask about a plant or upload an image...">
                <input type="file" id="image-upload" accept="image/*" style="display: none;">
                <button class="attach-btn">üìé</button>
                <button class="send-btn">‚û§</button>
            </div>
        </div>
    </div>

    <% if (uploadedImage) { %>
        <div>
            <h3>·∫¢nh ƒë√£ upload:</h3>
            <img src="<%= uploadedImage %>" alt="Uploaded Plant" style="max-width: 300px;">
        </div>
        <% } %>

            <script>
                document.addEventListener('DOMContentLoaded', () => {
                    const chatSessionsList = document.getElementById('chatSessionsList');
                    const newChatBtn = document.getElementById('newChatBtn');
                    const chatHistory = document.getElementById('chatHistory');
                    const welcomeArea = document.getElementById('welcomeArea');
                    const messageInput = document.getElementById('messageInput');
                    const uploadPhotoBtn = document.getElementById('uploadPhotoBtn');
                    const askQuestionBtn = document.getElementById('askQuestionBtn');
                    let currentSessionId = null;

                    // Load n·ªôi dung chat khi click v√†o m·ªôt phi√™n
                    chatSessionsList.addEventListener('click', async(e) => {
                        const sessionItem = e.target.closest('.chat-session');
                        if (!sessionItem) return;

                        const sessionId = sessionItem.dataset.sessionId;
                        currentSessionId = sessionId;

                        try {
                            const response = await fetch(`/chat/history/${sessionId}`);
                            const sessionData = await response.json();

                            // Hi·ªÉn th·ªã n·ªôi dung chat
                            chatHistory.innerHTML = '';
                            welcomeArea.style.display = 'none';

                            sessionData.messages.forEach(msg => {
                                const bubble = document.createElement('div');
                                bubble.classList.add(msg.role === 'user' ? 'user-message' : 'bot-message');

                                if (msg.image) {
                                    const imgElement = document.createElement('img');
                                    imgElement.src = msg.image;
                                    imgElement.alt = "Uploaded plant image";
                                    imgElement.style.maxWidth = '100%';
                                    imgElement.style.maxHeight = '200px';
                                    imgElement.style.borderRadius = '8px';
                                    bubble.appendChild(imgElement);
                                }

                                if (msg.content) {
                                    const textNode = document.createTextNode(msg.content);
                                    bubble.appendChild(textNode);
                                }

                                chatHistory.appendChild(bubble);
                            });

                            scrollToBottom();
                        } catch (error) {
                            console.error('Error loading chat session:', error);
                        }
                    });

                    // T·∫°o chat m·ªõi
                    newChatBtn.addEventListener('click', () => {
                        currentSessionId = null;
                        chatHistory.innerHTML = '';
                        welcomeArea.style.display = 'flex';
                        messageInput.value = '';
                    });

                    // Focus v√†o input khi click n√∫t h·ªèi
                    askQuestionBtn.addEventListener('click', () => {
                        messageInput.focus();
                    });

                    // M·ªü dialog upload ·∫£nh
                    uploadPhotoBtn.addEventListener('click', () => {
                        document.getElementById('image-upload').click();
                    });

                    function scrollToBottom() {
                        chatHistory.scrollTop = chatHistory.scrollHeight;
                    }

                    // C·∫≠p nh·∫≠t danh s√°ch phi√™n chat m·ªói khi c√≥ thay ƒë·ªïi
                    // Thay ƒë·ªïi c√°c URL API trong script
                    async function refreshChatSessions() {
                        try {
                            const response = await fetch('/chat/history/sessions');
                            const sessions = await response.json();

                            if (sessions.length > 0) {
                                chatSessionsList.innerHTML = sessions.map(session => `
          <li class="chat-session" data-session-id="${session.sessionId}">
            <div class="session-title">${session.title || 'New Chat'}</div>
            <div class="session-preview">
              ${session.messages[0]?.content.substring(0, 30) + (session.messages[0]?.content.length > 30 ? '...' : '')}
            </div>
            <div class="session-date">
              ${new Date(session.updatedAt).toLocaleString()}
            </div>
          </li>
        `).join('');
                            } else {
                                chatSessionsList.innerHTML = '<li class="no-sessions">No recent chats</li>';
                            }
                        } catch (error) {
                            console.error('Error refreshing chat sessions:', error);
                        }
                    }

                    // V√† khi load chat session
                    const response = await fetch(`/chat/history/session/${sessionId}`);

                    // G·ªçi l·∫ßn ƒë·∫ßu khi trang load
                    refreshChatSessions();
                });
            </script>
</body>

</html>